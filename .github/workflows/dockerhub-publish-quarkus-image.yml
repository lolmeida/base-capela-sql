name: Setup Docker Hub & Publish Quarkus Image

on:
  push:
    branches:
      - main

  workflow_dispatch: # Allows manual triggering
    inputs:
      images-to-keep:
        type: choice
        description: Keep last n images
        default: 3
        options:
          - 3
          - 5

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

env:
  USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Job details
        shell: bash
        run: |
          echo "Inputs: ${{ toJSON(inputs) }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        env:
          USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Test secret access
        run: |
          echo "The secret is accessed but not shown for security reasons"
          if [[ -z "${{ env.USERNAME }}" ]]; then echo "DOCKER_HUB_USERNAME is empty"; fi
          if [[ -z "${{ env.PASSWORD }}" ]]; then echo "DOCKER_HUB_PASSWORD is empty"; fi
        shell: bash

      - name: Log into Docker Hub
        run: docker login -u ${{ env.USERNAME }} -p ${{ env.PASSWORD }}
        shell: bash

      - name: Build and push Docker image with Jib
        run: ./mvnw compile jib:build -Djib.to.image=docker.io/${{ github.repository }}:${{ github.sha }}
        shell: bash

      - name: Delete old Docker images except last 5
        run: |
          images_to_delete=$(docker images --format "{{.Repository}}:{{.Tag}} {{.CreatedAt}}" | sort -k2 | head -n -${{ inputs.images-to-keep }} | awk '{print $1}')
          if [ -n "$images_to_delete" ]; then
            echo "$images_to_delete" | xargs -I {} docker rmi {}
            echo "Deleted old images: $images_to_delete"
          else
            echo "No images to delete"
          fi
        shell: bash
